version: 2
jobs:
  build-and-test:
    docker:
      - image: cimg/rust:1.61-node
      - image: cimg/postgres:14.2
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
    environment:
      # Fail the build if there are warnings
      RUSTFLAGS: '-D warnings'
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install sqlx-cli
          command: cargo install sqlx-cli --no-default-features --features native-tls,postgres
      - run:
          name: Install nushell
          command: curl -L https://github.com/nushell/nushell/releases/download/0.65.0/nu-0.65.0-x86_64-unknown-linux-gnu.tar.gz | tar -C ~/.cargo/bin -xvzf - nu
      - run:
          name: Migrate database
          command: SKIP_DOCKER=true nu ./scripts/init_db.nu
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build
      - save_cache:
          paths:
            - ~/.cargo/registry
            - ~/.cargo/git
            - target
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run all tests
          command: cargo test
  format:
    docker:
      - image: cimg/rust:1.61-node
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install formatter
          command: rustup component add rustfmt
      - run:
          name: Formatting
          command: cargo fmt --all -- --check

  lint:
    docker:
      - image: cimg/rust:1.61-node
      - image: cimg/postgres:14.2
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install Clippy
          command: rustup component add clippy
      - run:
          name: Install sqlx-cli
          command: cargo install sqlx-cli --no-default-features --features native-tls,postgres
      - run:
          name: Install nushell
          command: curl -L https://github.com/nushell/nushell/releases/download/0.65.0/nu-0.65.0-x86_64-unknown-linux-gnu.tar.gz | tar -C ~/.cargo/bin -xvzf - nu
      - run:
          name: Migrate database
          command: SKIP_DOCKER=true nu ./scripts/init_db.nu
      - run:
          name: Linting
          command: cargo clippy -- -D warnings

workflows:
  version: 2
  build-test:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - format:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
